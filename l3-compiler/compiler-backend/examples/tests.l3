(def assert (fun (c t)
    (if c
        (begin (string-print "OK:   ") (string-print t) (char-print 10))
        (begin (string-print "FAIL: ") (string-print t) (char-print 10))
    )))

(assert (= 1 1) "1 = 1")
(assert (not (= 1 -1)) "1 != -1")
(assert (not (= 1 2)) "1 != 2")
(assert (= 6 (+ 2 4)) "6 = 2 + 4")
(assert (= 2 (+ -2 4)) "2 = (-2) + 4")
(assert (= 6 (- 10 4)) "6 = 10 - 4")
(assert (= -14 (- -10 4)) "14 = (-10) - 4")
(assert (= 12 (* 3 4)) "12 = 3 * 4")
(assert (= 3 (/ 10 3)) "3 = 10 / 3")
(assert (= 3 (/ 10 3)) "3 = 10 / 3")
(assert (= 3 (/ 9 3)) "3 = 9 / 3")
(assert (= 2 (/ 8 3)) "2 = 8 / 3")
(assert (= -4 (/ -10 3)) "-4 = -10 / 3")
(assert (= -4 (/ -10 3)) "-4 = -10 / 3")
(assert (= -3 (/ -9 3)) "-3 = -9 / 3")
(assert (= -3 (/ -8 3)) "-3 = -8 / 3")
(assert (= 1 (% 10 3)) "1 = 10 % 3")
(assert (= 0 (% 9 3)) "0 = 9 % 3")
(assert (= 2 (% 8 3)) "2 = 8 % 3")
(assert (= 2 (% -10 3)) "2 = -10 % 3")
(assert (= 0 (% -9 3)) "0 = -9 % 3")
(assert (= 1 (% -8 3)) "1 = -8 % 3")
